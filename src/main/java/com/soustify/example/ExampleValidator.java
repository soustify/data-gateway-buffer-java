// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: example.proto

package com.soustify.example;


@SuppressWarnings("all")
public class ExampleValidator {
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		
		if (clazz.equals(com.soustify.example.Example.ExampleRequest.class)) return new ExampleRequestValidator();
		if (clazz.equals(com.soustify.example.Example.ExampleBody.class)) return new ExampleBodyValidator();
		if (clazz.equals(com.soustify.example.Example.ExampleResponse.class)) return new ExampleResponseValidator();
		return null;
	}


/**
	 * Validates {@code ExampleRequest} protobuf objects.
	 */
	public static class ExampleRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<com.soustify.example.Example.ExampleRequest> {
		
	
		
	
	
	

	public void assertValid(com.soustify.example.Example.ExampleRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Hashcode

	
			// Validate body
			if (proto.hasBody()) index.validatorFor(proto.getBody()).assertValid(proto.getBody());
	
	
	}
}
/**
	 * Validates {@code ExampleBody} protobuf objects.
	 */
	public static class ExampleBodyValidator implements io.envoyproxy.pgv.ValidatorImpl<com.soustify.example.Example.ExampleBody> {
		
	
		
	
		
	
		
	
		
		private final Double PRICE__GT = 0D;
	
		
	
		
	
		
		private final Double RATING__GT = 0D;
	
		
		private final Integer QUANTITY__GTE = 0;
	
		
		private final Double DISCOUNT__GTE = 0D;
	
		
	
		
	
		
	
		
	
	
	

	public void assertValid(com.soustify.example.Example.ExampleBody proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.StringValidation.uuid(".example.ExampleBody.id", proto.getId());
	
			io.envoyproxy.pgv.StringValidation.minLength(".example.ExampleBody.name", proto.getName(), 1);
	
			io.envoyproxy.pgv.StringValidation.minLength(".example.ExampleBody.description", proto.getDescription(), 3);
	
		if (proto.hasBornDate()) {
			io.envoyproxy.pgv.RequiredValidation.required(".example.ExampleBody.born_date", proto.getBornDate());
		} else {
			io.envoyproxy.pgv.RequiredValidation.required(".example.ExampleBody.born_date", null);
		};
	
			io.envoyproxy.pgv.ComparativeValidation.greaterThan(".example.ExampleBody.price", proto.getPrice(), PRICE__GT, java.util.Comparator.naturalOrder());
	
			io.envoyproxy.pgv.StringValidation.minLength(".example.ExampleBody.category", proto.getCategory(), 5);
	
			io.envoyproxy.pgv.RepeatedValidation.minItems(".example.ExampleBody.tags", proto.getTagsList(), 2);
			io.envoyproxy.pgv.RepeatedValidation.forEach(proto.getTagsList(), item -> {
				// no validation rules for Tags

			});
	
			io.envoyproxy.pgv.ComparativeValidation.greaterThan(".example.ExampleBody.rating", proto.getRating(), RATING__GT, java.util.Comparator.naturalOrder());
	
			io.envoyproxy.pgv.ComparativeValidation.greaterThanOrEqual(".example.ExampleBody.quantity", proto.getQuantity(), QUANTITY__GTE, java.util.Comparator.naturalOrder());
	
			io.envoyproxy.pgv.ComparativeValidation.greaterThanOrEqual(".example.ExampleBody.discount", proto.getDiscount(), DISCOUNT__GTE, java.util.Comparator.naturalOrder());
	
			io.envoyproxy.pgv.StringValidation.email(".example.ExampleBody.email", proto.getEmail());
	
			io.envoyproxy.pgv.StringValidation.minLength(".example.ExampleBody.phone", proto.getPhone(), 1);
	
			// Validate metadata
			if (proto.hasMetadata()) index.validatorFor(proto.getMetadata()).assertValid(proto.getMetadata());
	// no validation rules for Public

	
	
	}
}
/**
	 * Validates {@code ExampleResponse} protobuf objects.
	 */
	public static class ExampleResponseValidator implements io.envoyproxy.pgv.ValidatorImpl<com.soustify.example.Example.ExampleResponse> {
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
	
	

	public void assertValid(com.soustify.example.Example.ExampleResponse proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Id

	// no validation rules for Name

	// no validation rules for Description

	
			// Validate born_date
			if (proto.hasBornDate()) index.validatorFor(proto.getBornDate()).assertValid(proto.getBornDate());
	// no validation rules for Public

	// no validation rules for Price

	
			// Validate created_at
			if (proto.hasCreatedAt()) index.validatorFor(proto.getCreatedAt()).assertValid(proto.getCreatedAt());
	
			// Validate updated_at
			if (proto.hasUpdatedAt()) index.validatorFor(proto.getUpdatedAt()).assertValid(proto.getUpdatedAt());
	// no validation rules for Category

	
			io.envoyproxy.pgv.RepeatedValidation.forEach(proto.getTagsList(), item -> {
				// no validation rules for Tags

			});
	// no validation rules for Rating

	// no validation rules for Quantity

	// no validation rules for Discount

	// no validation rules for Email

	// no validation rules for Phone

	
			// Validate metadata
			if (proto.hasMetadata()) index.validatorFor(proto.getMetadata()).assertValid(proto.getMetadata());
	
			// Validate last_login
			if (proto.hasLastLogin()) index.validatorFor(proto.getLastLogin()).assertValid(proto.getLastLogin());
	// no validation rules for Status

	
	
	}
}
}

