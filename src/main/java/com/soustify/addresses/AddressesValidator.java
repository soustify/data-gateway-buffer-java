// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: addresses.proto

package com.soustify.addresses;


@SuppressWarnings("all")
public class AddressesValidator {
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		
		if (clazz.equals(com.soustify.addresses.Addresses.AddressesRequest.class)) return new AddressesRequestValidator();
		if (clazz.equals(com.soustify.addresses.Addresses.AddressesResponse.class)) return new AddressesResponseValidator();
		return null;
	}


/**
	 * Validates {@code AddressesRequest} protobuf objects.
	 */
	public static class AddressesRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<com.soustify.addresses.Addresses.AddressesRequest> {
		
	
		
		private final com.soustify.input.Input.StatusRequest[] EN_STATUS__IN = new com.soustify.input.Input.StatusRequest[]{
			com.soustify.input.Input.StatusRequest.forNumber(0),
			com.soustify.input.Input.StatusRequest.forNumber(1),
		};
	
		
	
		
	
		
		private final Double LATITUDE__LTE = 90D;
		private final Double LATITUDE__GTE = -90D;
	
		
		private final Double LONGITUDE__LTE = 180D;
		private final Double LONGITUDE__GTE = -180D;
	
		
	
		
	
		
	
	
	

	public void assertValid(com.soustify.addresses.Addresses.AddressesRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.StringValidation.uuid(".addresses.AddressesRequest.id", proto.getId());
	
			io.envoyproxy.pgv.CollectiveValidation.in(".addresses.AddressesRequest.en_status", proto.getEnStatus(), EN_STATUS__IN);
	
			io.envoyproxy.pgv.StringValidation.maxLength(".addresses.AddressesRequest.street", proto.getStreet(), 200);
	// no validation rules for Number

	
			io.envoyproxy.pgv.ComparativeValidation.range(".addresses.AddressesRequest.latitude", proto.getLatitude(), null, LATITUDE__LTE, null, LATITUDE__GTE, java.util.Comparator.naturalOrder());
	
			io.envoyproxy.pgv.ComparativeValidation.range(".addresses.AddressesRequest.longitude", proto.getLongitude(), null, LONGITUDE__LTE, null, LONGITUDE__GTE, java.util.Comparator.naturalOrder());
	
			io.envoyproxy.pgv.StringValidation.minLength(".addresses.AddressesRequest.zip_code", proto.getZipCode(), 1);
			io.envoyproxy.pgv.StringValidation.maxLength(".addresses.AddressesRequest.zip_code", proto.getZipCode(), 200);
	
			io.envoyproxy.pgv.StringValidation.maxLength(".addresses.AddressesRequest.complement", proto.getComplement(), 200);
	
			io.envoyproxy.pgv.StringValidation.maxLength(".addresses.AddressesRequest.neighborhood", proto.getNeighborhood(), 200);
	
	
	}
}
/**
	 * Validates {@code AddressesResponse} protobuf objects.
	 */
	public static class AddressesResponseValidator implements io.envoyproxy.pgv.ValidatorImpl<com.soustify.addresses.Addresses.AddressesResponse> {
		
	
		
	
		
	
		
	
		
	
		
		private final Double LATITUDE__LTE = 90D;
		private final Double LATITUDE__GTE = -90D;
	
		
		private final Double LONGITUDE__LTE = 180D;
		private final Double LONGITUDE__GTE = -180D;
	
		
	
		
	
		
	
	
	

	public void assertValid(com.soustify.addresses.Addresses.AddressesResponse proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.StringValidation.uuid(".addresses.AddressesResponse.id", proto.getId());
	// no validation rules for Status

	
			io.envoyproxy.pgv.StringValidation.uuid(".addresses.AddressesResponse.id_auditable", proto.getIdAuditable());
	
			io.envoyproxy.pgv.StringValidation.maxLength(".addresses.AddressesResponse.street", proto.getStreet(), 200);
	// no validation rules for Number

	
			io.envoyproxy.pgv.ComparativeValidation.range(".addresses.AddressesResponse.latitude", proto.getLatitude(), null, LATITUDE__LTE, null, LATITUDE__GTE, java.util.Comparator.naturalOrder());
	
			io.envoyproxy.pgv.ComparativeValidation.range(".addresses.AddressesResponse.longitude", proto.getLongitude(), null, LONGITUDE__LTE, null, LONGITUDE__GTE, java.util.Comparator.naturalOrder());
	
			io.envoyproxy.pgv.StringValidation.minLength(".addresses.AddressesResponse.zip_code", proto.getZipCode(), 1);
			io.envoyproxy.pgv.StringValidation.maxLength(".addresses.AddressesResponse.zip_code", proto.getZipCode(), 200);
	
			io.envoyproxy.pgv.StringValidation.maxLength(".addresses.AddressesResponse.complement", proto.getComplement(), 200);
	
			io.envoyproxy.pgv.StringValidation.maxLength(".addresses.AddressesResponse.neighborhood", proto.getNeighborhood(), 200);
	
	
	}
}
}

