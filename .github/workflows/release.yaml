name: Release and Publish to GitHub Packages

on:
  workflow_dispatch:
    inputs:
      TAG:
        description: 'Version increment type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: get-latest-tag
        run: |
          latest_tag=$(git tag -l 'v*' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)
          if [ -z "$latest_tag" ]; then
            latest_tag="v0.0.0"
          fi
          echo "Latest tag: $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Calculate New Version
        id: calculate-version
        run: |
          latest_tag="${{ env.latest_tag }}"
          version="${latest_tag#v}"
          IFS='.' read -r major minor patch <<< "$version"
          case "${{ github.event.inputs.TAG }}" in
            major)
              new_version="$((major + 1)).0.0"
              ;;
            minor)
              new_version="$major.$((minor + 1)).0"
              ;;
            patch)
              new_version="$major.$minor.$((patch + 1))"
              ;;
          esac
          echo "New version: v$new_version"
          echo "new_version=v$new_version" >> $GITHUB_ENV
          
      - name: Create and Push Tag
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://soustify:${GH_PAT}@github.com/soustify/data-gateway-buffer-java.git
          git tag "${{ env.new_version }}"
          git push origin "${{ env.new_version }}"


      - name: Setup Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Build and Deploy to GitHub Packages
        run: |
          mvn clean install
          mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
